@mixin breakWidthHeight($widthVar, $heightVar) {
	@media (min-width: $widthVar) and (min-height: $heightVar) { @content; }
}

@mixin breakpoint($point, $size: 0) {
	$targetPoint: max-width;
	@if $size == height {
		$targetPoint: min-height
	}
	@if $point == mobile {
		@media ($targetPoint: 480px) { @content; }
	}
	@else if $point == mobile-horizontal {
		@media ($targetPoint: 480px) and (orientation: landscape) { @content; }
	}

	@else if $point == tablet {
		@media ($targetPoint: 768px) { @content; }
	}

	@else if $point == tablet-horizontal {
		@media ($targetPoint: 768px) and (orientation: landscape) { @content; }
	}

	@else if $point == desktop {
		@media ($targetPoint: 1170px) { @content; }
	}

	@else if $point == desktop-wide {
		@media ($targetPoint: 1500px) { @content; }
	}

	@else {
		@media($point: $size) { @content; }
	}
}

@mixin no-select{
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
@mixin select{
	-moz-user-select: text;
	-khtml-user-select: text;
	-webkit-user-select: text;
	-ms-user-select: text;
	user-select: text;
}
@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}

@mixin divider-triangle($color: $green, $size: 1.4em) {
	width: 0px;
	height: 0px;
	border-style: solid;
	border-width: 0 ($size * 0.7) $size 0;
	border-color: transparent $color transparent transparent;
}

@mixin triangle($width: 20px, $height: 20px, $direction: up, $color: red) {
	width: 0; height: 0;

	// Right
	@if $direction == right {
		border-top: ($height / 2) solid transparent;
		border-bottom: ($height / 2) solid transparent;
		border-left: $width solid $color;
	}

	// Left
	@if $direction == left {
		border-top: ($height / 2) solid transparent;
		border-bottom: ($height / 2) solid transparent;
		border-right: $width solid $color;
	}

	// Up
	@if $direction == up {
		border-left: ($width / 2) solid transparent;
		border-right: ($width / 2) solid transparent;
		border-bottom: $height solid $color;
	}

	// Down
	@if $direction == down {
		border-left: ($width / 2) solid transparent;
		border-right: ($width / 2) solid transparent;
		border-top: $height solid $color;
	}
}

@mixin slanted-line($color, $deg: -35deg) {
	display: block;
	width: 1px;
	height: 100%;
	background: $color;

	@include rotate($deg);
}
@mixin no-box-shadow(){
	-webkit-box-shadow: none;
	-moz-box-shadow: none;
	box-shadow: none;
}
@mixin card-shadow($blur: 6px, $spread: 1px, $alpha: 0.1){
	-webkit-box-shadow: 0px 0px $blur $spread rgba(27,30,35,$alpha);
	-moz-box-shadow: 0px 0px $blur $spread rgba(27,30,35,$alpha);
	box-shadow: 0px 0px $blur $spread rgba(27,30,35,$alpha);
}

@mixin drop-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: 0) {
  -webkit-box-shadow: $x-axis $y-axis $blur $alpha;
  -moz-box-shadow: $x-axis $y-axis $blur $alpha;
  box-shadow: $x-axis $y-axis $blur $alpha;
}


@mixin centerBlock($top, $right, $bottom, $left, $margin, $position) {
	position: $position;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	margin: $margin;
}


@mixin iconButoon($color, $size, $animate, $animateDuration: 200ms) {
	border: 1px solid $color;
	@include border-radius(50%);
	@include square($size);
	line-height: $size;
	text-align: center;

		svg {
			display: inline;
			fill: $color;
			line-height: 1;
			vertical-align: baseline;
			@include square( $size - 20 );
			@include centerBlock(0, 0, 0, 0, auto, absolute);
		}

		@if $animate == true {
			&, & svg {
				@include transition(all $animateDuration ease-in-out);
			}
		}
}


.basic-transition {
	@include transition(all 200ms ease);
}